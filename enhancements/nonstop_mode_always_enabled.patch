From a5c04e3b7166d02236be73b82d903e0f0945314f Mon Sep 17 00:00:00 2001
From: GateGuy <gateguy33@gmail.com>
Date: Sat, 13 Jun 2020 19:20:34 -0400
Subject: [PATCH] Non-Stop Mode Always Enabled

---
diff --git a/src/game/interaction.c b/src/game/interaction.c
index ec4026e..ba4d764 100644
--- a/src/game/interaction.c
+++ b/src/game/interaction.c
@@ -765,6 +765,10 @@ u32 interact_star_or_key(struct MarioState *m, UNUSED u32 interactType, struct O
     u32 starIndex;
     u32 starGrabAction = ACT_STAR_DANCE_EXIT;
     u32 noExit = (o->oInteractionSubtype & INT_SUBTYPE_NO_EXIT) != 0;
+    u8 stayInLevelCommon = !(m->controller->buttonDown & L_TRIG || gCurrLevelNum == LEVEL_BOWSER_1 || gCurrLevelNum == LEVEL_BOWSER_2 || gCurrLevelNum == LEVEL_BOWSER_3);
+    if (stayInLevelCommon == TRUE) {
+        noExit = TRUE;
+    }
     u32 grandStar = (o->oInteractionSubtype & INT_SUBTYPE_GRAND_STAR) != 0;
 
     if (m->health >= 0x100) {
@@ -822,7 +826,11 @@ u32 interact_star_or_key(struct MarioState *m, UNUSED u32 interactType, struct O
             return set_mario_action(m, ACT_JUMBO_STAR_CUTSCENE, 0);
         }
 
-        return set_mario_action(m, starGrabAction, noExit + 2 * grandStar);
+        if (stayInLevelCommon == FALSE) {
+            return set_mario_action(m, starGrabAction, noExit + 2 * grandStar);
+        }
+        //If nonstop StayInLevel is enabled, autosave
+        save_file_do_save(gCurrSaveFileNum - 1);
     }
 
     return FALSE;
diff --git a/src/game/mario_actions_cutscene.c b/src/game/mario_actions_cutscene.c
index 4fdfd9b..9243aa8 100644
--- a/src/game/mario_actions_cutscene.c
+++ b/src/game/mario_actions_cutscene.c
@@ -599,6 +599,9 @@ s32 act_debug_free_move(struct MarioState *m) {
     return FALSE;
 }
 
+// camera.c
+BAD_RETURN(s32) cutscene_exit_painting_end(struct Camera *c);
+
 // star dance handler
 void general_star_dance_handler(struct MarioState *m, s32 isInWater) {
     s32 dialogID;
@@ -646,6 +649,11 @@ void general_star_dance_handler(struct MarioState *m, s32 isInWater) {
             set_mario_action(m, ACT_READING_AUTOMATIC_DIALOG, dialogID);
         } else {
             set_mario_action(m, isInWater ? ACT_WATER_IDLE : ACT_IDLE, 0);
+            set_fov_function(CAM_FOV_DEFAULT);
+            // fix camera bug when getting a star underwater with StayInLevel cheat enabled
+            if (isInWater) {
+                cutscene_exit_painting_end(m->area->camera);
+            }
         }
     }
 }
diff --git a/src/game/behaviors/ddd_pole.inc.c b/src/game/behaviors/ddd_pole.inc.c
index cc82102..a155806 100644
--- a/src/game/behaviors/ddd_pole.inc.c
+++ b/src/game/behaviors/ddd_pole.inc.c
@@ -1,23 +1,27 @@
 #include "../../sm64ap.h"
 
 void bhv_ddd_pole_init(void) {
-    if (!SM64AP_CheckedLoc(SM64AP_ID_KEY2) || !SM64AP_CheckedLoc(3626056)) {
-        obj_mark_for_deletion(o);
-    } else {
-        o->hitboxDownOffset = 100.0f;
-        o->oDDDPoleMaxOffset = 100.0f * o->oBehParams2ndByte;
-    }
+    o->oHomeY = o->oPosY;
+    o->hitboxDownOffset = 100.0f;
+    o->oDDDPoleMaxOffset = 100.0f * o->oBehParams2ndByte;
 }
 
 void bhv_ddd_pole_update(void) {
-    if (o->oTimer > 20) {
-        o->oDDDPoleOffset += o->oDDDPoleVel;
+    if (SM64AP_CheckedLoc(SM64AP_ID_KEY2) && SM64AP_CheckedLoc(3626056)) {
+        if (o->oPosY != o->oHomeY) {
+            o->oPosY = o->oHomeY;
+        }
+        if (o->oTimer > 20) {
+            o->oDDDPoleOffset += o->oDDDPoleVel;
 
-        if (clamp_f32(&o->oDDDPoleOffset, 0.0f, o->oDDDPoleMaxOffset)) {
-            o->oDDDPoleVel = -o->oDDDPoleVel;
-            o->oTimer = 0;
+            if (clamp_f32(&o->oDDDPoleOffset, 0.0f, o->oDDDPoleMaxOffset)) {
+                o->oDDDPoleVel = -o->oDDDPoleVel;
+                o->oTimer = 0;
+            }
         }
-    }
 
-    obj_set_dist_from_home(o->oDDDPoleOffset);
+        obj_set_dist_from_home(o->oDDDPoleOffset);
+    } else {
+        o->oPosY = -10000.0f;
+    }
 }
